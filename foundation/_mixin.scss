// Mixin
//
// テンプレート内で利用できる mixin と function を定義
//

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

// rem へ変換
@function to-rem($value, $base: null) {
  @if type-of($value) != 'number' {
    @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';
    @return $value;
  }

  @if unit($value) != 'rem' {
    $value: strip-unit($value) / strip-unit($base) * 1rem;
  }

  @if $value == 0rem {
    $value: 0;
  }
  @return $value;
}

// rem 計算
@function rem-calc($values, $base: null) {
  $rem-values: ();
  $count: length($values);

  @if $base == null {
    $base: $font-base-size;
  }

  @if unit($base) == '%' {
    $base: ($base / 100%) * 16px;
  }

  @if $count == 1 {
    @return to-rem($values, $base);
  }

  @for $i from 1 through $count {
    $rem-values: append($rem-values, to-rem(nth($values, $i), $base));
  }

  @return $rem-values;
}

// em へ変換
@function to-em($value) {
  @if unit($value) == 'px' or unitless($value) {
    $value: rem-calc($value, $base: 16px);
  }
  @return strip-unit($value) * 1em;
}

// ブレイクポイントのテキストを返す
@function breakpoint($val: small) {

  $bp: nth($val, 1);

  $bp-max: 0;

  $dir: if(length($val) > 1, nth($val, 2), up);

  $str: '';

  $named: false;

  @if $bp == 'landscape' or $bp == 'portrait' {
    @return '(orientation: #{$bp})';
  }
  @else if $bp == 'retina' {
    @return '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)';
  }


  @if type-of($bp) == 'string' {
    @if map-has-key($breakpoints, $bp) {
      @if $dir == 'only' or $dir == 'down' {
        $next-bp: map-next($breakpoints, $bp);

        @if $next-bp == null {
          $bp-max: null;
          @warn 'breakpoint(): the media query "#{$val}" cannot be used because #{$bp} is the largest breakpoint.';
        }
        @else {
          $bp-max: $next-bp;
        }
      }

      $bp: map-get($breakpoints, $bp);
      $named: true;
    }
    @else {
      $bp: 0;
    }
  }

  $bp: to-em($bp);
  @if $bp-max {
    $bp-max: to-em($bp-max) - (1/16);
  }

  @if $bp > 0em or $dir == 'only' or $dir == 'down' {

    @if $dir == 'only' {
      @if $named == true {
        $str: $str + '(min-width: #{$bp})';

        @if $bp-max != null {
          $str: $str + ' and (max-width: #{$bp-max})';
        }
      }
      @else {
        @warn 'Only named media queries can have an `only` range.';
      }
    }

    @else if $dir == 'down' {
      $max: 0;

      @if $named {
        $max: $bp-max;
      }
      @else {
        $max: $bp;
      }

      @if $named or $bp > 0em {
        $str: $str + '(max-width: #{$max})';
      }
    }
    @else if $bp > 0em {
      $str: $str + '(min-width: #{$bp})';
    }
  }
  @return $str;
}


// ブレイクポイントを出力
@mixin breakpoint($value) {
  $str: breakpoint($value);

  @if $str == '' {
    @content;
  }

  @else {
    @media screen and #{$str} {
      @content;
    }
  }
}


// map にアクセス
@function map-next($map, $key) {
  $values: map-values($map);

  $i: 1;
  $found: false;
  @each $val in map-keys($map) {
    @if $found == false {
      @if ($key == $val) {
        $found: true;
      }
      $i: $i + 1;
    }
  }
  @if $i > length($map) {
    @return null;
  }
  @else {
    @return nth($values, $i);
  }
}

// フォームの有効化時のスタイル
@mixin input-active(){
  outline: none;
  -webkit-box-shadow: none;
  box-shadow: none;
}


// センタリング
@mixin center-block() {
  margin-left: auto;
  margin-right: auto;
}


// トランジション
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// クリアフィックス
@mixin clearfix {
  zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// box sizing
@mixin box-sizing($type) {
  -webkit-box-sizing:$type;
  -moz-box-sizing:$type;
  box-sizing:$type;
}

// センターに合わせる
@mixin center-both {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

// クリアフィックス
%clearfix {
  zoom: 1;
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// スクロールバーを常時表示する
@mixin always_display_scrollbar($scrollbar-color) {
  &::-webkit-scrollbar {
    width: 6px;
  }
  &::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.25);
    border-radius: 6px;
  }
  &::-webkit-scrollbar-track-piece:start {
    background: $scrollbar-color;
  }
  &::-webkit-scrollbar-track-piece:end {
    background: rgba(255, 255, 255, 0.25);
  }
}


@mixin button_colors($color){
  background: $color;
  border-color: $color;
  &:hover {
    background: #fff;
    color: $color;
  }
}

@mixin bg-option(){
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
}

@mixin row-limit($font-size-base: $font-base-size, $font-size-base-sp: $font-base-size*0.875, $line-height-computed: 1.7, $lines-to-show: 2) {
  //$font-size-base: 18px;
  //$font-size-base-sp: 16px;
  //$line-height-computed: 1.7;
  //$lines-to-show: 2;
  overflow: hidden;
  width: 100%;
  span {
    display: block;
    font-size: $font-size-base;
    height: $font-size-base * $line-height-computed * $lines-to-show;
    line-height: $line-height-computed;
    position: relative;
    @include breakpoint(small only) {
      font-size: $font-size-base-sp;
      height: $font-size-base-sp * $line-height-computed * $lines-to-show;
    }
    &:before,
    &:after {
      background: $color-white;
      position: absolute;
    }
    &:before {
      content: "...";
      top: $font-size-base * $line-height-computed * ($lines-to-show - 1);
      right: 0;
      bottom: 0;
      @include breakpoint(small only) {
        top: $font-size-base-sp * $line-height-computed * ($lines-to-show - 1);
      }
    }
    &:after {
      content: "";
      height: 100%;
      width: 100%;
    }
  }
}

@mixin bg-img(){
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin:auto;
  width: 100%;
  height: 100%;
  @include bg-option();
}

